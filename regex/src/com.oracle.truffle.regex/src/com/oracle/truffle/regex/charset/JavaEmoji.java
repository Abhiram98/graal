/*
 * Copyright (c) 2018, 2022, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * The Universal Permissive License (UPL), Version 1.0
 *
 * Subject to the condition set forth below, permission is hereby granted to any
 * person obtaining a copy of this software, associated documentation and/or
 * data (collectively the "Software"), free of charge and under any and all
 * copyright rights in the Software, and any and all patent rights owned or
 * freely licensable by each licensor hereunder covering either (i) the
 * unmodified Software as contributed to or provided by such licensor, or (ii)
 * the Larger Works (as defined below), to deal in both
 *
 * (a) the Software, and
 *
 * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
 * one is included with the Software each a "Larger Work" to which the Software
 * is contributed by such licensors),
 *
 * without restriction, including without limitation the rights to copy, create
 * derivative works of, display, perform, and distribute the Software and make,
 * use, sell, offer for sale, import, export, have made, and have sold the
 * Software and the Larger Work(s), and to sublicense the foregoing rights on
 * either these or other terms.
 *
 * This license is subject to the following condition:
 *
 * The above copyright notice and either this complete permission notice or at a
 * minimum a reference to the UPL must be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.oracle.truffle.regex.charset;

class JavaEmoji {
    static final CodePointSet EMOJI = CodePointSet.createNoDedup(
            0x23, 0x23,
            0x2a, 0x2a,
            0x30, 0x39,
            0xa9, 0xa9,
            0xae, 0xae,
            0x203c, 0x203c,
            0x2049, 0x2049,
            0x2122, 0x2122,
            0x2139, 0x2139,
            0x2194, 0x2199,
            0x21a9, 0x21aa,
            0x231a, 0x231b,
            0x2328, 0x2328,
            0x23cf, 0x23cf,
            0x23e9, 0x23f3,
            0x23f8, 0x23fa,
            0x24c2, 0x24c2,
            0x25aa, 0x25ab,
            0x25b6, 0x25b6,
            0x25c0, 0x25c0,
            0x25fb, 0x25fe,
            0x2600, 0x2604,
            0x260e, 0x260e,
            0x2611, 0x2611,
            0x2614, 0x2615,
            0x2618, 0x2618,
            0x261d, 0x261d,
            0x2620, 0x2620,
            0x2622, 0x2623,
            0x2626, 0x2626,
            0x262a, 0x262a,
            0x262e, 0x262f,
            0x2638, 0x263a,
            0x2640, 0x2640,
            0x2642, 0x2642,
            0x2648, 0x2653,
            0x265f, 0x2660,
            0x2663, 0x2663,
            0x2665, 0x2666,
            0x2668, 0x2668,
            0x267b, 0x267b,
            0x267e, 0x267f,
            0x2692, 0x2697,
            0x2699, 0x2699,
            0x269b, 0x269c,
            0x26a0, 0x26a1,
            0x26a7, 0x26a7,
            0x26aa, 0x26ab,
            0x26b0, 0x26b1,
            0x26bd, 0x26be,
            0x26c4, 0x26c5,
            0x26c8, 0x26c8,
            0x26ce, 0x26cf,
            0x26d1, 0x26d1,
            0x26d3, 0x26d4,
            0x26e9, 0x26ea,
            0x26f0, 0x26f5,
            0x26f7, 0x26fa,
            0x26fd, 0x26fd,
            0x2702, 0x2702,
            0x2705, 0x2705,
            0x2708, 0x270d,
            0x270f, 0x270f,
            0x2712, 0x2712,
            0x2714, 0x2714,
            0x2716, 0x2716,
            0x271d, 0x271d,
            0x2721, 0x2721,
            0x2728, 0x2728,
            0x2733, 0x2734,
            0x2744, 0x2744,
            0x2747, 0x2747,
            0x274c, 0x274c,
            0x274e, 0x274e,
            0x2753, 0x2755,
            0x2757, 0x2757,
            0x2763, 0x2764,
            0x2795, 0x2797,
            0x27a1, 0x27a1,
            0x27b0, 0x27b0,
            0x27bf, 0x27bf,
            0x2934, 0x2935,
            0x2b05, 0x2b07,
            0x2b1b, 0x2b1c,
            0x2b50, 0x2b50,
            0x2b55, 0x2b55,
            0x3030, 0x3030,
            0x303d, 0x303d,
            0x3297, 0x3297,
            0x3299, 0x3299,
            0x1f004, 0x1f004,
            0x1f0cf, 0x1f0cf,
            0x1f170, 0x1f171,
            0x1f17e, 0x1f17f,
            0x1f18e, 0x1f18e,
            0x1f191, 0x1f19a,
            0x1f1e6, 0x1f1ff,
            0x1f201, 0x1f202,
            0x1f21a, 0x1f21a,
            0x1f22f, 0x1f22f,
            0x1f232, 0x1f23a,
            0x1f250, 0x1f251,
            0x1f300, 0x1f321,
            0x1f324, 0x1f393,
            0x1f396, 0x1f397,
            0x1f399, 0x1f39b,
            0x1f39e, 0x1f3f0,
            0x1f3f3, 0x1f3f5,
            0x1f3f7, 0x1f4fd,
            0x1f4ff, 0x1f53d,
            0x1f549, 0x1f54e,
            0x1f550, 0x1f567,
            0x1f56f, 0x1f570,
            0x1f573, 0x1f57a,
            0x1f587, 0x1f587,
            0x1f58a, 0x1f58d,
            0x1f590, 0x1f590,
            0x1f595, 0x1f596,
            0x1f5a4, 0x1f5a5,
            0x1f5a8, 0x1f5a8,
            0x1f5b1, 0x1f5b2,
            0x1f5bc, 0x1f5bc,
            0x1f5c2, 0x1f5c4,
            0x1f5d1, 0x1f5d3,
            0x1f5dc, 0x1f5de,
            0x1f5e1, 0x1f5e1,
            0x1f5e3, 0x1f5e3,
            0x1f5e8, 0x1f5e8,
            0x1f5ef, 0x1f5ef,
            0x1f5f3, 0x1f5f3,
            0x1f5fa, 0x1f64f,
            0x1f680, 0x1f6c5,
            0x1f6cb, 0x1f6d2,
            0x1f6d5, 0x1f6d7,
            0x1f6dc, 0x1f6e5,
            0x1f6e9, 0x1f6e9,
            0x1f6eb, 0x1f6ec,
            0x1f6f0, 0x1f6f0,
            0x1f6f3, 0x1f6fc,
            0x1f7e0, 0x1f7eb,
            0x1f7f0, 0x1f7f0,
            0x1f90c, 0x1f93a,
            0x1f93c, 0x1f945,
            0x1f947, 0x1f9ff,
            0x1fa70, 0x1fa7c,
            0x1fa80, 0x1fa88,
            0x1fa90, 0x1fabd,
            0x1fabf, 0x1fac5,
            0x1face, 0x1fadb,
            0x1fae0, 0x1fae8,
            0x1faf0, 0x1faf8
    );

    static final CodePointSet EMOJI_PRESENTATION = CodePointSet.createNoDedup(
            0x231a, 0x231b,
            0x23e9, 0x23ec,
            0x23f0, 0x23f0,
            0x23f3, 0x23f3,
            0x25fd, 0x25fe,
            0x2614, 0x2615,
            0x2648, 0x2653,
            0x267f, 0x267f,
            0x2693, 0x2693,
            0x26a1, 0x26a1,
            0x26aa, 0x26ab,
            0x26bd, 0x26be,
            0x26c4, 0x26c5,
            0x26ce, 0x26ce,
            0x26d4, 0x26d4,
            0x26ea, 0x26ea,
            0x26f2, 0x26f3,
            0x26f5, 0x26f5,
            0x26fa, 0x26fa,
            0x26fd, 0x26fd,
            0x2705, 0x2705,
            0x270a, 0x270b,
            0x2728, 0x2728,
            0x274c, 0x274c,
            0x274e, 0x274e,
            0x2753, 0x2755,
            0x2757, 0x2757,
            0x2795, 0x2797,
            0x27b0, 0x27b0,
            0x27bf, 0x27bf,
            0x2b1b, 0x2b1c,
            0x2b50, 0x2b50,
            0x2b55, 0x2b55,
            0x1f004, 0x1f004,
            0x1f0cf, 0x1f0cf,
            0x1f18e, 0x1f18e,
            0x1f191, 0x1f19a,
            0x1f1e6, 0x1f1ff,
            0x1f201, 0x1f201,
            0x1f21a, 0x1f21a,
            0x1f22f, 0x1f22f,
            0x1f232, 0x1f236,
            0x1f238, 0x1f23a,
            0x1f250, 0x1f251,
            0x1f300, 0x1f320,
            0x1f32d, 0x1f335,
            0x1f337, 0x1f37c,
            0x1f37e, 0x1f393,
            0x1f3a0, 0x1f3ca,
            0x1f3cf, 0x1f3d3,
            0x1f3e0, 0x1f3f0,
            0x1f3f4, 0x1f3f4,
            0x1f3f8, 0x1f43e,
            0x1f440, 0x1f440,
            0x1f442, 0x1f4fc,
            0x1f4ff, 0x1f53d,
            0x1f54b, 0x1f54e,
            0x1f550, 0x1f567,
            0x1f57a, 0x1f57a,
            0x1f595, 0x1f596,
            0x1f5a4, 0x1f5a4,
            0x1f5fb, 0x1f64f,
            0x1f680, 0x1f6c5,
            0x1f6cc, 0x1f6cc,
            0x1f6d0, 0x1f6d2,
            0x1f6d5, 0x1f6d7,
            0x1f6dc, 0x1f6df,
            0x1f6eb, 0x1f6ec,
            0x1f6f4, 0x1f6fc,
            0x1f7e0, 0x1f7eb,
            0x1f7f0, 0x1f7f0,
            0x1f90c, 0x1f93a,
            0x1f93c, 0x1f945,
            0x1f947, 0x1f9ff,
            0x1fa70, 0x1fa7c,
            0x1fa80, 0x1fa88,
            0x1fa90, 0x1fabd,
            0x1fabf, 0x1fac5,
            0x1face, 0x1fadb,
            0x1fae0, 0x1fae8,
            0x1faf0, 0x1faf8
    );

    static final CodePointSet EMOJI_MODIFIER = CodePointSet.createNoDedup(0x1f3fb, 0x1f3ff);

    static final CodePointSet EMOJI_MODIFIER_BASE = CodePointSet.createNoDedup(
            0x261d, 0x261d,
            0x26f9, 0x26f9,
            0x270a, 0x270d,
            0x1f385, 0x1f385,
            0x1f3c2, 0x1f3c4,
            0x1f3c7, 0x1f3c7,
            0x1f3ca, 0x1f3cc,
            0x1f442, 0x1f443,
            0x1f446, 0x1f450,
            0x1f466, 0x1f478,
            0x1f47c, 0x1f47c,
            0x1f481, 0x1f483,
            0x1f485, 0x1f487,
            0x1f48f, 0x1f48f,
            0x1f491, 0x1f491,
            0x1f4aa, 0x1f4aa,
            0x1f574, 0x1f575,
            0x1f57a, 0x1f57a,
            0x1f590, 0x1f590,
            0x1f595, 0x1f596,
            0x1f645, 0x1f647,
            0x1f64b, 0x1f64f,
            0x1f6a3, 0x1f6a3,
            0x1f6b4, 0x1f6b6,
            0x1f6c0, 0x1f6c0,
            0x1f6cc, 0x1f6cc,
            0x1f90c, 0x1f90c,
            0x1f90f, 0x1f90f,
            0x1f918, 0x1f91f,
            0x1f926, 0x1f926,
            0x1f930, 0x1f939,
            0x1f93c, 0x1f93e,
            0x1f977, 0x1f977,
            0x1f9b5, 0x1f9b6,
            0x1f9b8, 0x1f9b9,
            0x1f9bb, 0x1f9bb,
            0x1f9cd, 0x1f9cf,
            0x1f9d1, 0x1f9dd,
            0x1fac3, 0x1fac5,
            0x1faf0, 0x1faf8
    );

    static final CodePointSet EMOJI_COMPONENT = CodePointSet.createNoDedup(
            0x23, 0x23,
            0x2a, 0x2a,
            0x30, 0x39,
            0x200d, 0x200d,
            0x20e3, 0x20e3,
            0xfe0f, 0xfe0f,
            0x1f1e6, 0x1f1ff,
            0x1f3fb, 0x1f3ff,
            0x1f9b0, 0x1f9b3,
            0xe0020, 0xe007f
    );

    static final CodePointSet EXTENDED_PICTOGRAPHIC = CodePointSet.createNoDedup(
            0xa9, 0xa9,
            0xae, 0xae,
            0x203c, 0x203c,
            0x2049, 0x2049,
            0x2122, 0x2122,
            0x2139, 0x2139,
            0x2194, 0x2199,
            0x21a9, 0x21aa,
            0x231a, 0x231b,
            0x2328, 0x2328,
            0x2388, 0x2388,
            0x23cf, 0x23cf,
            0x23e9, 0x23f3,
            0x23f8, 0x23fa,
            0x24c2, 0x24c2,
            0x25aa, 0x25ab,
            0x25b6, 0x25b6,
            0x25c0, 0x25c0,
            0x25fb, 0x25fe,
            0x2600, 0x2605,
            0x2607, 0x2612,
            0x2614, 0x2685,
            0x2690, 0x2705,
            0x2708, 0x2712,
            0x2714, 0x2714,
            0x2716, 0x2716,
            0x271d, 0x271d,
            0x2721, 0x2721,
            0x2728, 0x2728,
            0x2733, 0x2734,
            0x2744, 0x2744,
            0x2747, 0x2747,
            0x274c, 0x274c,
            0x274e, 0x274e,
            0x2753, 0x2755,
            0x2757, 0x2757,
            0x2763, 0x2767,
            0x2795, 0x2797,
            0x27a1, 0x27a1,
            0x27b0, 0x27b0,
            0x27bf, 0x27bf,
            0x2934, 0x2935,
            0x2b05, 0x2b07,
            0x2b1b, 0x2b1c,
            0x2b50, 0x2b50,
            0x2b55, 0x2b55,
            0x3030, 0x3030,
            0x303d, 0x303d,
            0x3297, 0x3297,
            0x3299, 0x3299,
            0x1f000, 0x1f0ff,
            0x1f10d, 0x1f10f,
            0x1f12f, 0x1f12f,
            0x1f16c, 0x1f171,
            0x1f17e, 0x1f17f,
            0x1f18e, 0x1f18e,
            0x1f191, 0x1f19a,
            0x1f1ad, 0x1f1e5,
            0x1f201, 0x1f20f,
            0x1f21a, 0x1f21a,
            0x1f22f, 0x1f22f,
            0x1f232, 0x1f23a,
            0x1f23c, 0x1f23f,
            0x1f249, 0x1f3fa,
            0x1f400, 0x1f53d,
            0x1f546, 0x1f64f,
            0x1f680, 0x1f6ff,
            0x1f774, 0x1f77f,
            0x1f7d5, 0x1f7ff,
            0x1f80c, 0x1f80f,
            0x1f848, 0x1f84f,
            0x1f85a, 0x1f85f,
            0x1f888, 0x1f88f,
            0x1f8ae, 0x1f8ff,
            0x1f90c, 0x1f93a,
            0x1f93c, 0x1f945,
            0x1f947, 0x1faff,
            0x1fc00, 0x1fffd
    );
}
